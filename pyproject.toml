[project]
name = "stat-ffmpeg"
version = "0.1.0"
description = "Downloads static ffmpeg builds for Windows, macOS, and Linux"
readme = "README.md"
authors = [
    { name = "Marko Bausch", email = "60338487+mrkbac@users.noreply.github.com" },
]
requires-python = ">=3.10"
dependencies = [
    "pytest>=8.4.0",
]

[project.optional-dependencies]
dev = ["pytest", "pytest-cov", "ruff", "pyright", "pre-commit"]

[project.scripts]
ffmpeg = "stat_ffmpeg:run_ffmpeg"
ffprobe = "stat_ffmpeg:run_ffprobe"
clear_cache = "stat_ffmpeg:clear_cache"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.ruff]
target-version = "py310"
line-length = 100

[tool.ruff.lint]
select = ['ALL']
ignore = [
    "S310",  # Audit URL open (expected for downloading binaries)
    "S103",  # os.chmod setting permissive mask (need executable permissions)
    "S603",  # subprocess call: check for execution of untrusted input (expected for CLI entry points)
    "COM812",  # Trailing comma missing (conflicts with formatter)
    "PLR2004",  # Magic values (acceptable in some cases)
    "T201",  # print statement used
]
[tool.ruff.lint.per-file-ignores]
# relaxes in tests
"tests/*" = [
    "S101",  # Use of assert detected (legitimate in tests)
    "BLE001",  # Broad exception catching (acceptable in tests)
    "PT011",  # Broad pytest.raises (sometimes acceptable)
    "PERF203",  # try-except in loop (acceptable in tests)
    "PLR2004",  # Magic values (acceptable in tests)
    "D401",  # Imperative mood (less important in tests)
]

[dependency-groups]
dev = [
    "pre-commit>=4.2.0",
    "pyright>=1.1.402",
    "pytest-asyncio>=1.0.0",
    "pytest-cov>=6.2.1",
    "pytest-mock>=3.14.1",
    "ruff>=0.11.13",
]

[tool.pytest.ini_options]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
]
